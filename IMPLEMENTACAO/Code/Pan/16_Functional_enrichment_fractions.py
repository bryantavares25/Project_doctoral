
# CHATGPT #

'''from goatools.obo_parser import GODag
from goatools.associations import read_gaf
from goatools.go_enrichment import GOEnrichmentStudy

# Arquivos
obo_file = "go-basic.obo"
assoc_file = "gene2go.tsv"  # pode ser em formato GAF ou um .tsv simples

# Carregar estrutura GO
go_dag = GODag(obo_file)

# Carregar associações gene → GO
gene2go = read_gaf(assoc_file)

# Lista de desejos
f1 = open("study.txt", "r")
study_genes = f1.read().splitlines()
f1.close()

f2 = open("population.txt", "r")
pop_genes = f2.read().splitlines()
f2.close()

# Enriquecimento
goea_obj = GOEnrichmentStudy(
    pop_genes,   # background genes
    gene2go,     # gene2go mapping
    go_dag,      # ontology
    methods=["fdr_bh"]  # correção de múltiplos testes
)

results = goea_obj.run_study(study_genes)

# Mostrar resultados significativos
goea_obj.print_results(results, min_ratio=0.05, pval=0.05)
'''
# CHATGPT #

# DEEPSEEK #
from goatools import obo_parser
from goatools.go_enrichment import GOEnrichmentStudy

# Carregar a ontologia GO
# go_obo = "go-basic.obo"  # Arquivo OBO da GO
go_obo = "/home/bryantavares/Documents/Doctoral_data/Bionfo_doc_analyses/go-basic.obo"  # Arquivo OBO da GO
go = obo_parser.GODag(go_obo)

# Carregar anotações (gene-GO)
#gene2go = "gene2go.txt"  # Formato: gene \t GO_ID
gene2go = "/home/bryantavares/Documents/Bionfo_doc_analyses/ANVIO_MFC/GENBANK-METADATA/03_PAN/EXPORT-PROTEINS/Interpro_db/MFC_interpro_db.tsv"  # Formato: gene \t GO_ID
associations = {}
f = open(gene2go)
for line in f:
    try:
        gene, go_id = line.strip().split('\t')
        associations.setdefault(gene, set()).add(go_id)
    except ValueError:
        # Skip lines that do not have exactly two tab-separated values
        continue
f.close()

# Definir genes de interesse e população de referência
#study_genes = ["gene1", "gene2", "gene3"]  # Exemplo

study_genes=["GC_00000001", "GC_00000002", "GC_00000003", "GC_00000009", "GC_00000014", "GC_00000015", "GC_00000018", "GC_00000019", "GC_00000020", "GC_00000023", "GC_00000034", "GC_00000035", "GC_00000038", "GC_00000039", "GC_00000041", "GC_00000042", "GC_00000044", "GC_00000047", "GC_00000048", "GC_00000049", "GC_00000050", "GC_00000051", "GC_00000052", "GC_00000054", "GC_00000058", "GC_00000059", "GC_00000060", "GC_00000061", "GC_00000062", "GC_00000063", "GC_00000064", "GC_00000065", "GC_00000067", "GC_00000068", "GC_00000070", "GC_00000071", "GC_00000072", "GC_00000073", "GC_00000074", "GC_00000075", "GC_00000076", "GC_00000077", "GC_00000078", "GC_00000079", "GC_00000080", "GC_00000081", "GC_00000082", "GC_00000083", "GC_00000084", "GC_00000085", "GC_00000086", "GC_00000087", "GC_00000088", "GC_00000089", "GC_00000090", "GC_00000091", "GC_00000092", "GC_00000093", "GC_00000094", "GC_00000095", "GC_00000096", "GC_00000097", "GC_00000098", "GC_00000099", "GC_00000100", "GC_00000101", "GC_00000102", "GC_00000103", "GC_00000104", "GC_00000105", "GC_00000106", "GC_00000107", "GC_00000108", "GC_00000109", "GC_00000110", "GC_00000111", "GC_00000112", "GC_00000113", "GC_00000114", "GC_00000115", "GC_00000116", "GC_00000118", "GC_00000119", "GC_00000120", "GC_00000121", "GC_00000122", "GC_00000123", "GC_00000124", "GC_00000125", "GC_00000126", "GC_00000127", "GC_00000128", "GC_00000129", "GC_00000130", "GC_00000131", "GC_00000132", "GC_00000133", "GC_00000134", "GC_00000135", "GC_00000136", "GC_00000137", "GC_00000138", "GC_00000139", "GC_00000140", "GC_00000141", "GC_00000142", "GC_00000143", "GC_00000144", "GC_00000145", "GC_00000146", "GC_00000147", "GC_00000149", "GC_00000150", "GC_00000151", "GC_00000152", "GC_00000153", "GC_00000154", "GC_00000155", "GC_00000156", "GC_00000157", "GC_00000158", "GC_00000159", "GC_00000160", "GC_00000161", "GC_00000163", "GC_00000164", "GC_00000165", "GC_00000166", "GC_00000167", "GC_00000168", "GC_00000169", "GC_00000170", "GC_00000171", "GC_00000172", "GC_00000173", "GC_00000174", "GC_00000175", "GC_00000176", "GC_00000177", "GC_00000178", "GC_00000179", "GC_00000180", "GC_00000181", "GC_00000182", "GC_00000183", "GC_00000184", "GC_00000185", "GC_00000186", "GC_00000187", "GC_00000188", "GC_00000189", "GC_00000190", "GC_00000191", "GC_00000192", "GC_00000193", "GC_00000194", "GC_00000195", "GC_00000196", "GC_00000197", "GC_00000198", "GC_00000199", "GC_00000200", "GC_00000201", "GC_00000202", "GC_00000203", "GC_00000204", "GC_00000205", "GC_00000206", "GC_00000207", "GC_00000208", "GC_00000209", "GC_00000210", "GC_00000211", "GC_00000212", "GC_00000213", "GC_00000214", "GC_00000215", "GC_00000216", "GC_00000218", "GC_00000219", "GC_00000220", "GC_00000221", "GC_00000222", "GC_00000223", "GC_00000224", "GC_00000225", "GC_00000226", "GC_00000228", "GC_00000229", "GC_00000230", "GC_00000231", "GC_00000232", "GC_00000233", "GC_00000234", "GC_00000235", "GC_00000236", "GC_00000237", "GC_00000238", "GC_00000239", "GC_00000241", "GC_00000242", "GC_00000243", "GC_00000244", "GC_00000245", "GC_00000246", "GC_00000247", "GC_00000248", "GC_00000249", "GC_00000250", "GC_00000251", "GC_00000252", "GC_00000253", "GC_00000254", "GC_00000255", "GC_00000256", "GC_00000257", "GC_00000258", "GC_00000259", "GC_00000260", "GC_00000261", "GC_00000262", "GC_00000263", "GC_00000264", "GC_00000265", "GC_00000266", "GC_00000267", "GC_00000268", "GC_00000269", "GC_00000270", "GC_00000271", "GC_00000272", "GC_00000273", "GC_00000274", "GC_00000275", "GC_00000276", "GC_00000277", "GC_00000278", "GC_00000279", "GC_00000280", "GC_00000281", "GC_00000282", "GC_00000283", "GC_00000284", "GC_00000285", "GC_00000286", "GC_00000287", "GC_00000288", "GC_00000290", "GC_00000291", "GC_00000292", "GC_00000293", "GC_00000294", "GC_00000295", "GC_00000296", "GC_00000297", "GC_00000299", "GC_00000300", "GC_00000301", "GC_00000302", "GC_00000303", "GC_00000304", "GC_00000305", "GC_00000306", "GC_00000307", "GC_00000308", "GC_00000309", "GC_00000310", "GC_00000311", "GC_00000312", "GC_00000313", "GC_00000314", "GC_00000315", "GC_00000316", "GC_00000317", "GC_00000318", "GC_00000319", "GC_00000320", "GC_00000321", "GC_00000322", "GC_00000323", "GC_00000324", "GC_00000325", "GC_00000326", "GC_00000327", "GC_00000328", "GC_00000329", "GC_00000330", "GC_00000331", "GC_00000332", "GC_00000333", "GC_00000334", "GC_00000335", "GC_00000336", "GC_00000337", "GC_00000338", "GC_00000339", "GC_00000340", "GC_00000341", "GC_00000342", "GC_00000343", "GC_00000344", "GC_00000345", "GC_00000346", "GC_00000347", "GC_00000348", "GC_00000349", "GC_00000350", "GC_00000351", "GC_00000352", "GC_00000353", "GC_00000354", "GC_00000355", "GC_00000356", "GC_00000357", "GC_00000358", "GC_00000359", "GC_00000360", "GC_00000361", "GC_00000362", "GC_00000363", "GC_00000364", "GC_00000365", "GC_00000366", "GC_00000367", "GC_00000368", "GC_00000369", "GC_00000370", "GC_00000371", "GC_00000372", "GC_00000373", "GC_00000374", "GC_00000375", "GC_00000376", "GC_00000377", "GC_00000378", "GC_00000379", "GC_00000380", "GC_00000381", "GC_00000383", "GC_00000384", "GC_00000385", "GC_00000386", "GC_00000387", "GC_00000388", "GC_00000390", "GC_00000392", "GC_00000393", "GC_00000394", "GC_00000395", "GC_00000396", "GC_00000397", "GC_00000399", "GC_00000400", "GC_00000401", "GC_00000402", "GC_00000403", "GC_00000404", "GC_00000405", "GC_00000406", "GC_00000407", "GC_00000408", "GC_00000409", "GC_00000410", "GC_00000411", "GC_00000412", "GC_00000413", "GC_00000414", "GC_00000415", "GC_00000416", "GC_00000418", "GC_00000419", "GC_00000420", "GC_00000421", "GC_00000422", "GC_00000424", "GC_00000425", "GC_00000426", "GC_00000427", "GC_00000428", "GC_00000429", "GC_00000430", "GC_00000431", "GC_00000432", "GC_00000434", "GC_00000435", "GC_00000436", "GC_00000438", "GC_00000439", "GC_00000440", "GC_00000441", "GC_00000442", "GC_00000443", "GC_00000444", "GC_00000445"]
population_genes = list(associations.keys())  # Todos os genes anotados

# Executar análise de enriquecimento
methods = ["bonferroni", "fdr"]  # Correções para múltiplos testes
g = GOEnrichmentStudy(population_genes, associations, go, methods=methods)
result = g.run_study(study_genes)

# Salvar resultados
g.write_summary("enriquecimento_go.txt", result)
# DEEPSEEK #